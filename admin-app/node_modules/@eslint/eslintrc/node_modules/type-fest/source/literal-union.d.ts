import { Primitive } from './basic';

/**
 * Allows creating a union type by combining primitive types and literal types without sacrificing auto-completion in IDEs for the literal type part of the union.
 *
 * This type is a workaround for [Microsoft/TypeScript#29729](https://github.com/Microsoft/TypeScript/issues/29729). It will be removed as soon as it's not needed anymore.
 *
 * @example
 * ```
 * import { LiteralUnion } from 'type-fest';
 *
 * type Pet = LiteralUnion<'dog' | 'cat', string>;
 *
 * const pet: Pet = '';
 * // You will get auto-completion for `dog` and `cat` literals.
 * ```
 */
export type LiteralUnion<
	LiteralType extends string,
	BaseType extends Primitive = string
> = LiteralType | (Exclude<BaseType, LiteralType> & { __type__?: never });

