import React, { useEffect } from 'react';

function SomeComponent() {
  const [error, setError] = React.useState(null);

  // 'useEffect' is defined but never used.
  useEffect(() => {}, []);

  return (
    <div>
      {/* 'error' is assigned a value but never used. */}
      {/* 'setError' is assigned a value but never used. */}
      <h1>Some Component</h1>
    </div>
  );
}

export default SomeComponent;


import React, { useEffect } from 'react';

function SomeComponent() {
  const [error, setError] = React.useState(null);

  useEffect(() => {
    // Add your useEffect logic here.
  }, []);

  const handleClick = () => {
    if (error) {
      setError(null);
    } else {
      setError('An error occurred.');
    }
  };

  return (
    <div>
      <h1>Some Component</h1>
      <button onClick={handleClick}>Toggle Error</button>
      {error && <p>{error}</p>}
    </div>
  );
}

export default SomeComponent;


function SomeComponent() {
  const someValue = 5;

  if (someValue == '5') {
    // This condition will always be true, which might not be what you want.
    console.log('someValue is equal to "5"');
  }

  return <div>Some Component</div>;
}


function SomeComponent() {
  const someValue = 5;

  if (someValue === '5') {
    // This condition will only be true if someValue is the string '5'.
    console.log('someValue is equal to "5"');
  }

  return <div>Some Component</div>;
}


function SomeComponent() {
  return <img src="example.jpg" />;
}


function SomeComponent() {
  return <img src="example.jpg" alt="Example Image" />;
}
