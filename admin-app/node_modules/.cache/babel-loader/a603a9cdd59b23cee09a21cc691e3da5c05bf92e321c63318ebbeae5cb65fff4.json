{"ast":null,"code":"import { categoryConstants } from \"../actions/constants\";\nconst initState = {\n  categories: [],\n  loading: false,\n  error: null\n};\nconst buildNewCategories = (parentId, categories, category) => {\n  let myCategories = [];\n  if (parentId == undefined) {\n    return [...categories, {\n      _id: category._id,\n      name: category.name,\n      slug: category.slug,\n      children: []\n    }];\n  }\n  for (let cat of categories) {\n    if (cat._id == parentId) {\n      const newCategory = {\n        _id: category._id,\n        name: category.name,\n        slug: category.slug,\n        parentId: category.parentId,\n        children: []\n      };\n      myCategories.push({\n        ...cat,\n        children: cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\n      });\n    } else {\n      myCategories.push({\n        ...cat,\n        children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\n      });\n    }\n  }\n  return myCategories;\n};\nconst categoryReducer = (state = initState, action) => {\n  switch (action.type) {\n    case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\n      state = {\n        ...state,\n        categories: action.payload.categories\n      };\n      break;\n    case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n      state = {\n        ...state,\n        loading: true\n      };\n      break;\n    case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n      const category = action.payload.category;\n      const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\n      console.log(updatedCategories);\n      state = {\n        ...state,\n        categories: updatedCategories,\n        loading: false\n      };\n      break;\n    case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n      state = {\n        ...initState\n      };\n      break;\n    default:\n      break;\n    case categoryConstants.UPDATE_CATEGORIES_REQUEST:\n      state = {\n        ...state,\n        loading: true\n      };\n      break;\n    case categoryConstants.UPDATE_CATEGORIES_SUCCESS:\n      state = {\n        ...state,\n        loading: false\n      };\n      break;\n    case categoryConstants.UPDATE_CATEGORIES_FAILURE:\n      state = {\n        ...state,\n        error: action.payload.error\n      };\n      break;\n  }\n  return state;\n};\nexport default categoryReducer;","map":{"version":3,"names":["categoryConstants","initState","categories","loading","error","buildNewCategories","parentId","category","myCategories","undefined","_id","name","slug","children","cat","newCategory","push","length","categoryReducer","state","action","type","GET_ALL_CATEGORIES_SUCCESS","payload","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","updatedCategories","console","log","ADD_NEW_CATEGORY_FAILURE","UPDATE_CATEGORIES_REQUEST","UPDATE_CATEGORIES_SUCCESS","UPDATE_CATEGORIES_FAILURE"],"sources":["C:/Users/kouas/OneDrive/Bureau/mern-batirem/admin-app/src/reducers/category.reducer.js"],"sourcesContent":["import { categoryConstants } from \"../actions/constants\";\r\n\r\n\r\n\r\n\r\nconst initState = {\r\n    categories: [],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\n\r\nconst buildNewCategories = (parentId, categories, category) => {\r\n    let myCategories = [];\r\n\r\n\r\n    if (parentId == undefined) {\r\n\r\n        return [\r\n            ...categories,\r\n            {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                children: []\r\n            }\r\n        ]\r\n    }\r\n\r\n    for (let cat of categories) {\r\n\r\n        if (cat._id == parentId) {\r\n            const newCategory = {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                parentId: category.parentId,\r\n                children: []\r\n            };\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\r\n            })\r\n        } else {\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\r\n            });\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n    return myCategories;\r\n}\r\n\r\nconst categoryReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                categories: action.payload.categories\r\n            }\r\n            break;\r\n        case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\r\n            const category = action.payload.category;\r\n            const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\r\n            console.log(updatedCategories);\r\n            state = {\r\n                ...state,\r\n                categories: updatedCategories,\r\n                loading: false,\r\n            }\r\n            break;\r\n        case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\r\n            state = {\r\n                ...initState\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n            case categoryConstants.UPDATE_CATEGORIES_REQUEST:\r\n                state = {\r\n                    ...state,\r\n                    loading:true\r\n                }\r\n                break;\r\n                case categoryConstants.UPDATE_CATEGORIES_SUCCESS:\r\n                    state = {\r\n                        ...state,\r\n                        loading:false\r\n                    }\r\n                break;\r\n                case categoryConstants.UPDATE_CATEGORIES_FAILURE:\r\n                    state = {\r\n                        ...state,\r\n                        error: action.payload.error\r\n                    }\r\n                break;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default categoryReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}