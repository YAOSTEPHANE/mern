{"ast":null,"code":"import axios from '../helpers/axios';\nimport { categoryConstants } from './constants';\nexport const getAllCategory = () => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.GET_ALL_CATEGORIES_REQUEST\n    });\n    const res = await axios.get(`category/getcategory`);\n    console.log(res);\n    if (res.status === 200) {\n      const {\n        categoryList\n      } = res.data;\n      dispatch({\n        type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\n        payload: {\n          categories: categoryList\n        }\n      });\n    } else {\n      dispatch({\n        type: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};\nexport const addCategory = form => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.ADD_NEW_CATEGORY_REQUEST\n    });\n    const res = await axios.post(`/category/create`, form);\n    if (res.status === 201) {\n      dispatch({\n        type: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\n        payload: {\n          category: res.data.category\n        }\n      });\n    } else {\n      dispatch({\n        type: categoryConstants.ADD_NEW_CATEGORY_FAILURE,\n        payload: res.data.error\n      });\n    }\n  };\n};\nexport const updateCategories = form => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.ADD_NEW_CATEGORY_REQUEST\n    });\n    const res = await axios.post(`/category/update`, form);\n    if (res.status === 201) {} else {}\n  };\n};","map":{"version":3,"names":["axios","categoryConstants","getAllCategory","dispatch","type","GET_ALL_CATEGORIES_REQUEST","res","get","console","log","status","categoryList","data","GET_ALL_CATEGORIES_SUCCESS","payload","categories","GET_ALL_CATEGORIES_FAILURE","error","addCategory","form","ADD_NEW_CATEGORY_REQUEST","post","ADD_NEW_CATEGORY_SUCCESS","category","ADD_NEW_CATEGORY_FAILURE","updateCategories"],"sources":["C:/Users/kouas/OneDrive/Bureau/mern-batirem/admin-app/src/actions/category.action.js"],"sourcesContent":["import axios from '../helpers/axios';\r\nimport { categoryConstants } from './constants';\r\n\r\n\r\nexport const getAllCategory = () => {\r\n    return async dispatch => {\r\n\r\n        dispatch({type:categoryConstants.GET_ALL_CATEGORIES_REQUEST});\r\n        const res = await axios.get(`category/getcategory`);\r\n        console.log(res);\r\n        if(res.status ===200){\r\n\r\n            const {categoryList} = res.data;\r\n\r\n            dispatch({\r\n            type:categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\r\n            payload:{categories:categoryList}\r\n\r\n        });\r\n        }else{\r\n            dispatch({\r\n                type:categoryConstants.GET_ALL_CATEGORIES_FAILURE,\r\n                payload:{error:res.data.error}\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const addCategory = (form) =>{\r\n    return async dispatch =>{\r\n        dispatch({type:categoryConstants.ADD_NEW_CATEGORY_REQUEST});\r\n        const res = await axios.post(`/category/create`, form);\r\n        if(res.status === 201){\r\n            dispatch({type:categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\r\n            payload: {category: res.data.category} \r\n            });\r\n        }else{\r\n            dispatch({type:categoryConstants.ADD_NEW_CATEGORY_FAILURE,\r\n                payload:res.data.error\r\n                });\r\n        }\r\n    }\r\n}\r\nexport const updateCategories = (form) =>{\r\n    return async dispatch =>{\r\n        dispatch({type:categoryConstants.ADD_NEW_CATEGORY_REQUEST});\r\n        const res = await axios.post(`/category/update`, form);\r\n        if(res.status === 201){\r\n           \r\n        }else{\r\n            \r\n        }\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,kBAAkB;AACpC,SAASC,iBAAiB,QAAQ,aAAa;AAG/C,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAChC,OAAO,MAAMC,QAAQ,IAAI;IAErBA,QAAQ,CAAC;MAACC,IAAI,EAACH,iBAAiB,CAACI;IAA0B,CAAC,CAAC;IAC7D,MAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,sBAAqB,CAAC;IACnDC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAChB,IAAGA,GAAG,CAACI,MAAM,KAAI,GAAG,EAAC;MAEjB,MAAM;QAACC;MAAY,CAAC,GAAGL,GAAG,CAACM,IAAI;MAE/BT,QAAQ,CAAC;QACTC,IAAI,EAACH,iBAAiB,CAACY,0BAA0B;QACjDC,OAAO,EAAC;UAACC,UAAU,EAACJ;QAAY;MAEpC,CAAC,CAAC;IACF,CAAC,MAAI;MACDR,QAAQ,CAAC;QACLC,IAAI,EAACH,iBAAiB,CAACe,0BAA0B;QACjDF,OAAO,EAAC;UAACG,KAAK,EAACX,GAAG,CAACM,IAAI,CAACK;QAAK;MACjC,CAAC,CAAC;IACN;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIC,IAAI,IAAI;EAChC,OAAO,MAAMhB,QAAQ,IAAG;IACpBA,QAAQ,CAAC;MAACC,IAAI,EAACH,iBAAiB,CAACmB;IAAwB,CAAC,CAAC;IAC3D,MAAMd,GAAG,GAAG,MAAMN,KAAK,CAACqB,IAAI,CAAE,kBAAiB,EAAEF,IAAI,CAAC;IACtD,IAAGb,GAAG,CAACI,MAAM,KAAK,GAAG,EAAC;MAClBP,QAAQ,CAAC;QAACC,IAAI,EAACH,iBAAiB,CAACqB,wBAAwB;QACzDR,OAAO,EAAE;UAACS,QAAQ,EAAEjB,GAAG,CAACM,IAAI,CAACW;QAAQ;MACrC,CAAC,CAAC;IACN,CAAC,MAAI;MACDpB,QAAQ,CAAC;QAACC,IAAI,EAACH,iBAAiB,CAACuB,wBAAwB;QACrDV,OAAO,EAACR,GAAG,CAACM,IAAI,CAACK;MACjB,CAAC,CAAC;IACV;EACJ,CAAC;AACL,CAAC;AACD,OAAO,MAAMQ,gBAAgB,GAAIN,IAAI,IAAI;EACrC,OAAO,MAAMhB,QAAQ,IAAG;IACpBA,QAAQ,CAAC;MAACC,IAAI,EAACH,iBAAiB,CAACmB;IAAwB,CAAC,CAAC;IAC3D,MAAMd,GAAG,GAAG,MAAMN,KAAK,CAACqB,IAAI,CAAE,kBAAiB,EAAEF,IAAI,CAAC;IACtD,IAAGb,GAAG,CAACI,MAAM,KAAK,GAAG,EAAC,CAEtB,CAAC,MAAI,CAEL;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}