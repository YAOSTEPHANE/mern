{"ast":null,"code":"import axios from '../helpers/axios';\nimport { categoryConstants } from './constants';\nconst getAllCategory = () => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.GET_ALL_CATEGORIES_REQUEST\n    });\n    const res = await axios.get(`category/getcategory`);\n    console.log(res);\n    if (res.status === 200) {\n      const {\n        categoryList\n      } = res.data;\n      dispatch({\n        type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\n        payload: {\n          categories: categoryList\n        }\n      });\n    } else {\n      dispatch({\n        type: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};\nexport const addCategory = form => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.ADD_NEW_CATEGORY_REQUEST\n    });\n    try {\n      const res = await axios.post(`/category/create`, form);\n      if (res.status === 201) {\n        dispatch({\n          type: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\n          payload: {\n            category: res.data.category\n          }\n        });\n      } else {\n        dispatch({\n          type: categoryConstants.ADD_NEW_CATEGORY_FAILURE,\n          payload: res.data.error\n        });\n      }\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n};\nexport const updateCategories = form => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.UPDATE_CATEGORIES_REQUEST\n    });\n    const res = await axios.post(`/category/update`, form);\n    if (res.status === 201) {\n      dispatch({\n        type: categoryConstants.UPDATE_CATEGORIES_SUCCESS\n      });\n      dispatch(getAllCategory());\n    } else {\n      const {\n        error\n      } = res;\n      dispatch({\n        type: categoryConstants.UPDATE_CATEGORIES_FAILURE,\n        payload: {\n          error\n        }\n      });\n    }\n  };\n};\nexport const deleteCategories = ids => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.DELETE_CATEGORIES_REQUEST\n    });\n    const res = await axios.post(`/category/delete`, {\n      payload: {\n        ids\n      }\n    });\n    if (res.status === 201) {\n      return true;\n    } else {}\n  };\n};\nexport { getAllCategory };","map":{"version":3,"names":["axios","categoryConstants","getAllCategory","dispatch","type","GET_ALL_CATEGORIES_REQUEST","res","get","console","log","status","categoryList","data","GET_ALL_CATEGORIES_SUCCESS","payload","categories","GET_ALL_CATEGORIES_FAILURE","error","addCategory","form","ADD_NEW_CATEGORY_REQUEST","post","ADD_NEW_CATEGORY_SUCCESS","category","ADD_NEW_CATEGORY_FAILURE","response","updateCategories","UPDATE_CATEGORIES_REQUEST","UPDATE_CATEGORIES_SUCCESS","UPDATE_CATEGORIES_FAILURE","deleteCategories","ids","DELETE_CATEGORIES_REQUEST"],"sources":["C:/Users/kouas/OneDrive/Bureau/mern-batirem/admin-app/src/actions/category.action.js"],"sourcesContent":["import axios from '../helpers/axios';\r\nimport { categoryConstants } from './constants';\r\n\r\n\r\nconst getAllCategory = () => {\r\n    return async dispatch => {\r\n\r\n        dispatch({ type: categoryConstants.GET_ALL_CATEGORIES_REQUEST });\r\n        const res = await axios.get(`category/getcategory`);\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n\r\n            const { categoryList } = res.data;\r\n\r\n            dispatch({\r\n                type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\r\n                payload: { categories: categoryList }\r\n\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\r\n                payload: { error: res.data.error }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const addCategory = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: categoryConstants.ADD_NEW_CATEGORY_REQUEST });\r\n        try {\r\n            const res = await axios.post(`/category/create`, form);\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\r\n                    payload: { category: res.data.category }\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: categoryConstants.ADD_NEW_CATEGORY_FAILURE,\r\n                    payload: res.data.error\r\n                });\r\n            }\r\n        }catch(error){\r\n            console.log(error.response);\r\n        }\r\n            \r\n       \r\n    }\r\n}\r\nexport const updateCategories = (form) => {\r\n    return async dispatch => {\r\n        dispatch({type: categoryConstants.UPDATE_CATEGORIES_REQUEST});\r\n        const res = await axios.post(`/category/update`, form);\r\n        if (res.status === 201) {\r\n            dispatch({type: categoryConstants.UPDATE_CATEGORIES_SUCCESS});\r\n            dispatch(getAllCategory())\r\n        } else {\r\n            const {error} = res;\r\n            dispatch({\r\n                type:categoryConstants.UPDATE_CATEGORIES_FAILURE,\r\n                payload: {error}\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteCategories = (ids) => {\r\n    return async dispatch => {\r\n        dispatch({type: categoryConstants.DELETE_CATEGORIES_REQUEST});\r\n        const res = await axios.post(`/category/delete`, {\r\n            payload: {\r\n                ids\r\n            }\r\n        });\r\n        if (res.status === 201) {\r\n            return true;\r\n        } else {\r\n            \r\n        }\r\n    }\r\n}\r\nexport {\r\n    getAllCategory\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}