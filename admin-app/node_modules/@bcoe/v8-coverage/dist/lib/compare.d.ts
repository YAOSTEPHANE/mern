import { FunctionCov, RangeCov, ScriptCov } from "./types";

/**
 * Compares two script coverages.
 * The result is determined by comparing their `url` value in alphabetical sort.
 * @param a - The first script coverage to compare.
 * @param b - The second script coverage to compare.
 * @returns A negative number if `a` is less than `b`, zero if they are equal,
 * and a positive number if `a` is greater than `b`.
 */
export function compareScriptCovs(a: Readonly<ScriptCov>, b: Readonly<ScriptCov>): number {
  return a.url.localeCompare(b.url);
}

/**
 * Compares two function coverages.
 * The result is determined by comparing the root ranges.
 * @param a - The first function coverage to compare.
 * @param b - The second function coverage to compare.
 * @returns A negative number if `a` is less than `b`, zero if they are equal,
 * and a positive number if `a` is greater than `b`.
 */
export function compareFunctionCovs(a: Readonly<FunctionCov>, b: Readonly<FunctionCov>): number {
  return compareRangeCovs(a.range, b.range);
}

/**
 * Compares two range coverages.
 * The ranges are first ordered by ascending `startOffset` and then by
 * descending `endOffset`. This corresponds to a pre-order tree traversal.
 * @param a - The first range coverage to compare.
 * @param b - The second range coverage to compare.
 * @returns A negative number if `a` is less than `b`, zero if they are equal,
 * and a positive number if `a` is greater than `b`.
 */
export function compareRangeCovs(a: Readonly<RangeCov>, b: Readonly<RangeCov>): number {
  if (a.startOffset !== b.startOffset) {
    return a.startOffset - b.startOffset;
  }
  return b.endOffset - a.endOffset;
}

