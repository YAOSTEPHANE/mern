"use strict";
const { default: e } = require("@csstools/postcss-progressive-custom-properties");
const { default: r } = require("postcss-value-parser");

const n = (e) => e && "object" == typeof e && "default" in e ? e : { default: e };
const u = n(e);
const o = n(r);

/**
 * Simple matrix (and vector) multiplication
 * Warning: No error handling for incompatible dimensions!
 * @author Lea Verou 2020 MIT License
 */
function multiplyMatrices(a, b) {
  const m = a.length;
  const n = b.length;
  let t, i, j;
  const c = Array.isArray(a[0]) ? a : [a];
  if (Array.isArray(b[0])) {
    const d = b[0].map((e) => b.map((t) => t[e]));
    return c.map((a) => d.map((b) => b.reduce((b, d, f) => b + a[f] * d, 0)));
  } else {
    const d = b.map((e) => [e]);
    return c.map((a) => d.map((b) => a.reduce((b, d, f) => b + d * a[f], 0)));
  }
}

// ... rest of the code

module.exports = j;
