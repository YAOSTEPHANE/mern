const debug = require('debug')('semver');

const { src, t } = exports;
const {
  MAX_LENGTH,
  MAX_SAFE_INTEGER,
  MAX_SAFE_COMPONENT_LENGTH,
  MAX_SAFE_BUILD_LENGTH,
  LETTERDASHNUMBER,
  safeRegexReplacements,
} = require('./constants');

const makeSafeRe = (value) =>
  safeRegexReplacements.reduce(
    (safeValue, [token, max]) =>
      safeValue.replace(new RegExp(token + '*', 'g'), token + '{0,' + max + '}')
        .replace(new RegExp(token + '+', 'g'), token + '{1,' + max + '}'),
    value
  );

// Regular Expressions for tokenizing, validating, and parsing SemVer version strings.
src[t.NUMERICIDENTIFIER] = '0|[1-9]\\d*';
src[t.NUMERICIDENTIFIERLOOSE] = '\\d+';
src[t.NONNUMERICIDENTIFIER] = '\\d*[a-zA-Z-]' + LETTERDASHNUMBER + '*';
src[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\.' +
                     '(' + src[t.NUMERICIDENTIFIER] + ')\\.' +
                     '(' + src[t.NUMERICIDENTIFIER] + ')';
src[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\.' +
                          '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\.' +
                          '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')';
src[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +
                             '|' + src[t.NONNUMERICIDENTIFIER] + ')';
src[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +
                                   '|' + src[t.NONNUMERICIDENTIFIER] + ')';
src[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +
                   '(?:\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))';
src[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +
                        '(?:\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))';
src[t.BUILDIDENTIFIER] = LETTERDASHNUMBER + '+';
src[t.BUILD] = '(?:\\+(' + src[t.BUILDIDENTIFIER] +
              '(?:\\.' + src[t.BUILDIDENTIFIER] + ')*))';
src[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +
                  src[t.PRERELEASE] + '?' +
                  src[t.BUILD] + '?';
src[t.FULL] = '^' + src[t.FULLPLAIN] + '$';
src[t.LOOSEPLAIN] = '[v=\\s]*' + src[t.MAINVERSIONLOOSE] +
                   src[t.PRERELEASELOOSE] + '?' +
                   src[t.BUILD] + '?';
src[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$';
src[t.GTLT] = '((?:<|>)?=?)';
src[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\*';
src[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\*';
src[t.XRANGEPLAIN] = '[v=\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +
                    '(?:\\.(' + src[t.XRANGEIDENTIFIER] + ')' +
                    '(?:\\.(' + src[t.XRANGEIDENTIFIER] + ')' +
                    '(?:' + src[t.PRERELEASE] + ')?' +
                    src[t.BUILD] + '?' +
                    ')?)?'
