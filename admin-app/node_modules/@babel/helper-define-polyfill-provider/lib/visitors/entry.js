"use strict";

import { Program, ImportDeclaration } from "babel";
import { getImportSource, getRequireSource } from "../utils";

export interface CallProviderOptions {
  kind: "import" | "require";
  source: string;
}

export type CallProvider = (options: CallProviderOptions, path: ImportDeclaration | Program) => void;

export default function (callProvider: CallProvider) {
  if (typeof callProvider !== "function") {
    throw new Error("callProvider must be a function");
  }

  return {
    ImportDeclaration(path: ImportDeclaration) {
      const source = getImportSource(path);
      if (!source) return;
      callProvider({ kind: "import", source }, path);
    },
    Program(path: Program) {
      path.call("traverse", {
        enter(nodePath: any) {
          if (nodePath.isImportDeclaration()) return;
          const source = getRequireSource(nodePath);
          if (!source) return;
          callProvider({ kind: "import", source }, nodePath);
        }
      });
    }
  };
}
