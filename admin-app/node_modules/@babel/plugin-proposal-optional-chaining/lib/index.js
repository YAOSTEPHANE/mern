'use strict';

const helperPluginUtils = require('@babel/helper-plugin-utils');
const syntaxOptionalChaining = require('@babel/plugin-syntax-optional-chaining');
const core = require('@babel/core');
const helperSkipTransparentExpressionWrappers = require('@babel/helper-skip-transparent-expression-wrappers');

// ... (rest of the code remains the same)

const index = helperPluginUtils.declare((api, options) => {
  api.assertVersion(7);

  const loose = options.loose || false;
  const noDocumentAll = api.assumption("noDocumentAll") || loose;
  const pureGetters = api.assumption("pureGetters") || loose;

  return {
    name: "proposal-optional-chaining",
    inherits: syntaxOptionalChaining.default,
    visitor: {
      "OptionalCallExpression|OptionalMemberExpression"(path) {
        transform(path, {
          noDocumentAll,
          pureGetters
        });
      }
    }
  };
});

module.exports = index;
module.exports.transform = transform;

//# sourceMappingURL=index.js.map

