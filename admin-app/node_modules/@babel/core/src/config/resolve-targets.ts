import path from "path";
import { getTargets, InputTargets, Targets } from "@babel/helper-compilation-targets";
import type { ValidatedOptions } from "./validation/options";

// Resolve the browserslist config file
export function resolveBrowserslistConfigFile(
  browserslistConfigFile: string,
  configFileDir: string,
): string | undefined {
  return path.resolve(configFileDir, browserslistConfigFile);
}

// Resolve targets based on the given options
export function resolveTargets(
  options: ValidatedOptions,
  root: string,
): Targets {
  const { targets: optTargets, browserslistConfigFile, browserslistEnv } = options;

  let targets: InputTargets = { node: 'current' };

  if (typeof optTargets === "string" || Array.isArray(optTargets)) {
    targets = { browsers: optTargets };
  } else if (optTargets) {
    targets = { ...optTargets, esmodules: "intersect" };
  }

  let configFile: string | false = typeof browserslistConfigFile === "string" ? browserslistConfigFile : false;
  let ignoreBrowserslistConfig = browserslistConfigFile === false;

  return getTargets(targets, {
    ignoreBrowserslistConfig,
    configFile,
    configPath: root,
    browserslistEnv,
  });
}
