"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = loadBlockHoistPlugin;

const traverse = require("@babel/traverse");
const plugin = require("../config/plugin.js");

let LOADED_PLUGIN;

const blockHoistPlugin = {
  name: "internal.blockHoist",
  visitor: {
    Block: {
      exit({
        node
      }) {
        const {
          body
        } = node;
        let hasChange = false;
        let max = MAX_VALUE;

        for (const n of body) {
          const p = priority(n);
          if (p > max) {
            hasChange = true;
            break;
          }
          max = p;
        }

        if (hasChange) node.body = stableSort(body.slice());
      }
    }
  }
};

function loadBlockHoistPlugin() {
  if (!LOADED_PLUGIN) {
    LOADED_PLUGIN = new plugin.default(Object.assign({}, blockHoistPlugin, {
      visitor: traverse.explode(blockHoistPlugin.visitor)
    }), {});
  }
  return LOADED_PLUGIN;
}

const MAX_VALUE = Math.pow(2, 30) - 1;

function priority(bodyNode) {
  const priority = bodyNode == null ? void 0 : bodyNode._blockHoist;

  if (priority === undefined) return 1;
  if (priority !== undefined && priority !== false) return 2;

  return priority;
}

function stableSort(body) {
