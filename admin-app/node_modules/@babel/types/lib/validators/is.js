"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.is = is;

const shallowEqual = require("../utils/shallowEqual").default;
const isType = require("./isType").default;
const isPlaceholderType = require("./isPlaceholderType").default;
const { FLIPPED_ALIAS_KEYS } = require("../definitions/index");

function is(type, node, opts) {
  // Return false if node is falsy
  if (!node) return false;

  // Check if node type matches the given type
  const matchesType = isType(node.type, type);
  if (!matchesType) {
    // If there are no options and node is a Placeholder with a type that matches a flipped alias,
    // check if it matches the expected node type
    if (!opts && node.type === "Placeholder" && type in FLIPPED_ALIAS_KEYS) {
      return isPlaceholderType(node.expectedNode, type);
    }
    return false;
  }

  // If there are no options, return true
  if (typeof opts === "undefined") {
    return true;
  }

  // Otherwise, check if node shallowly equals the options
  return shallowEqual(node, opts);
}

//# sourceMappingURL=is.js.map
