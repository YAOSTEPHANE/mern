const superPropBase = require("./superPropBase.js");
const defineProperty = require("./defineProperty.js");

let set;
if (Reflect && Reflect.set) {
  set = Reflect.set;
} else {
  set = function set(target, property, value, receiver) {
    const base = superPropBase(target, property);
    let desc;
    if (base) {
      desc = Object.getOwnPropertyDescriptor(base, property);
      if (desc.set) {
        desc.set.call(receiver, value);
        return true;
      } else if (!desc.writable) {
        return false;
      }
    }
    desc = Object.getOwnPropertyDescriptor(receiver, property);
    if (desc) {
      if (!desc.writable) {
        return false;
      }
      desc.value = value;
      Object.defineProperty(receiver, property, desc);
    } else {
      defineProperty(receiver, property, value);
    }
    return true;
  };
}

function _set(target, property, value, receiver = target, isStrict = false) {
  const s = set(target, property, value, receiver);
  if (!s && isStrict) {
    throw new TypeError('failed to set property');
  }
  return value;
}

module.exports = _set;
module.exports.__esModule = true;
