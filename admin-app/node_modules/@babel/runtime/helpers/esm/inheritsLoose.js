export default function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  setPrototypeOf(subClass, superClass);
}

// If the `setPrototypeOf` function is not provided, you can use the following implementation:
function setPrototypeOf(obj, proto) {
  Object.setPrototypeOf(obj, proto);
  return obj;
}

// Or, if you're targeting modern browsers or using a polyfill, you can simplify the code further:
export default function _inheritsLoose(subClass, superClass) {
  subClass.prototype = superClass.prototype;
  subClass.prototype.constructor = subClass;
}


class SubClass extends SuperClass {
  constructor() {
    super();
    // Additional initialization code here
  }
}
