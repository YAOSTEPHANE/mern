import toPropertyKey from "./toPropertyKey.js";

const defineProperties = (target, props) => {
  for (const prop of props) {
    const descriptor = {
      enumerable: prop.enumerable || false,
      configurable: true,
      ...(prop.value !== undefined && { writable: true, value: prop.value })
    };

    Object.defineProperty(target, toPropertyKey(prop.key), descriptor);
  }
};

const createClass = (Constructor, protoProps, staticProps) => {
  if (protoProps) defineProperties(Constructor.prototype, protoProps);
  if (staticProps) defineProperties(Constructor, staticProps);

  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });

  return Constructor;
};

export default createClass;
