import superPropBase from "./superPropBase.js";

export default function _get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get = Reflect.get.bind();
  } else {
    _get = function _get(target, property, receiver) {
      const base = superPropBase(target, property);
      if (!Object.prototype.hasOwnProperty.call(base, property)) {
        throw new Error(`No property "${property}" found in base object`);
      }
      const desc = Object.getOwnPropertyDescriptor(base, property);
      if (desc.get) {
        return desc.get.apply(receiver, []);
      }
      return desc.value;
    };
  }
  return _get(target, property, receiver);
}
