const usingSymbol = Symbol.asyncDispose || Symbol.for("Symbol.asyncDispose") || Symbol.dispose || Symbol.for("Symbol.dispose");

function _using(o, n, useAsyncDispose = false) {
  if (n === null || typeof n !== 'object') {
    throw new TypeError("using declarations can only be used with objects, functions, null, or undefined.");
  }

  const disposeMethod = useAsyncDispose ? n[usingSymbol] : n[usingSymbol] || n.dispose;

  if (typeof disposeMethod !== 'function') {
    throw new TypeError("Property [Symbol.dispose] or [Symbol.asyncDispose] is not a function.");
  }

  o.push({
    value: n,
    dispose: disposeMethod,
    async: useAsyncDispose
  });

  return n;
}

module.exports = _using;
module.exports.default = _using;
module.exports.__esModule = true;
