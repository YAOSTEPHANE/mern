// Importing only the necessary functions from toPropertyKey.js
const { toPropertyKey } = require('./toPropertyKey.js');

// Defining the _defineProperty function
function _defineProperty(obj, key, value) {
  key = toPropertyKey(key);

  // Using Object.defineProperty to define the property with the specified attributes
  Object.defineProperty(obj, key, {
    value: value,
    enumerable: true,
    configurable: true,
    writable: true
  });

  // Returning the object for method chaining
  return obj;
}

// Exporting the function as the default export
module.exports = _defineProperty;

// Adding a type declaration file for better TypeScript support
/**
 * @typedef {Object} DefinePropertyOptions
 * @property {boolean} [enumerable=true] - A boolean indicating whether the property should be enumerable or not.
 * @property {boolean} [configurable=true] - A boolean indicating whether the property should be configurable or not.
 * @property {boolean} [writable=true] - A boolean indicating whether the property should be writable or not.
 */

/**
 * Defines a new property directly on an object, or modifies an existing property on an object.
 *
 * @param {object} obj - The object on which to define the property.
 * @param {string|symbol} key - The name or symbol of the property to be defined or modified.
 * @param {*} [value] - The value associated with the property.
 * @param {DefinePropertyOptions} [options] - The property attributes to be set.
 * @returns {object} The object with the property defined or modified.
 */
module.exports.default = _defineProperty;

// Exporting __esModule as true for better tree shaking
module.exports.__esModule = true;
