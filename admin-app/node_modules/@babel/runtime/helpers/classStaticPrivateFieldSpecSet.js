// Import required modules
const classApplyDescriptorSet = require('./classApplyDescriptorSet.js');
const classCheckPrivateStaticAccess = require('./classCheckPrivateStaticAccess.js');
const classCheckPrivateStaticFieldDescriptor = require('./classCheckPrivateStaticFieldDescriptor.js');

// Export the function directly with a descriptive name
module.exports = {
  setPrivateStaticField: (receiver, classConstructor, descriptor, value) => {
    // Check if the receiver and classConstructor have the required access
    classCheckPrivateStaticAccess(receiver, classConstructor);

    // Check if the descriptor has the required 'set' method
    classCheckPrivateStaticFieldDescriptor(descriptor, "set");

    // Apply the descriptor set to the receiver with the given value
    const result = classApplyDescriptorSet(receiver, descriptor, value);

    // Return the value that was set
    return result;
  }
};

// Set the module as an ES module
module.exports.__esModule = true;

// Export the default property as the module itself
module.exports.default = module.exports;
