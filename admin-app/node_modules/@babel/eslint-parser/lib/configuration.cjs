const _excluded = ["babelOptions", "ecmaVersion", "sourceType", "requireConfigFile"];

const _objectWithoutPropertiesLoose = (source, excluded) => {
  if (source == null) return {};
  const target = {};
  const sourceKeys = Object.keys(source);
  let key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
};

const normalizeESLintConfig = (options) => {
  const {
    babelOptions = {},
    ecmaVersion = 2020,
    sourceType = "module",
    requireConfigFile = true,
    ...otherOptions
  } = options;

  return Object.assign({}, otherOptions, {
    babelOptions: Object.assign({
      cwd: process.cwd()
    }, babelOptions),
    ecmaVersion: ecmaVersion === "latest" ? Number.MAX_SAFE_INTEGER : ecmaVersion,
    sourceType,
    requireConfigFile
  });
};

module.exports = { normalizeESLintConfig };

//# sourceMappingURL=configuration.cjs.map
