"use strict";

const semver = require("semver");
const convert = require("./convert/index.cjs");
const babelParser = require(process.versions.node.split(".")[0] > 8 || process.versions.node.split(".")[0] === 8 && process.versions.node.split(".")[1] >= 9 ?
  require.resolve :
  (request, paths) => {
    const modulePath = require.resolve(request, { paths });
    if (modulePath) return modulePath;
    const error = new Error(`Cannot resolve module '${request}'`);
    error.code = "MODULE_NOT_FOUND";
    throw error;
  }("@babel/parser", [require.resolve("@babel/core/package.json")]);

let isRunningMinSupportedCoreVersion = null;

module.exports = function parse(code, options, client) {
  const minSupportedCoreVersion = ">=7.2.0";

  if (isRunningMinSupportedCoreVersion === null) {
    isRunningMinSupportedCoreVersion = semver.satisfies(client.getVersion(), minSupportedCoreVersion);
  }

  if (!isRunningMinSupportedCoreVersion) {
    throw new Error(`@babel/eslint-parser@${"7.23.3"} does not support @babel/core@${client.getVersion()}. Please upgrade to @babel/core@${minSupportedCoreVersion}.`);
  }

  const { ast, parserOptions } = client.maybeParse(code, options);

  if (ast) return ast;

  try {
    return convert.ast(babelParser.parse(code, parserOptions), code, client.getTokLabels(), client.getVisitorKeys());
  } catch (err) {
    throw convert.error(err);
  }
};

//# sourceMappingURL=parse.cjs.map
