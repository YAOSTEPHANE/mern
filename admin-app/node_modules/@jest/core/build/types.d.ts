/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

import type { Test, Config, Path } from '@jest/types';
import type { Context } from 'jest-runtime';

export type Stats = {
  roots: number;
  testMatch: number;
  testPathIgnorePatterns: number;
  testRegex: number;
  testPathPattern?: number;
};

export type TestRunData = Array<{
  context: Context;
  matches: {
    allTests: number;
    tests: Test[];
    total?: number;
    stats?: Stats;
  };
}>;

export type TestPathPredicate = (path: Path) => boolean;

export type TestPathCases = Array<{
  stat: keyof Stats;
  isMatch: TestPathPredicate;
}>;

export type TestPathCasesWithPathPattern = TestPathCases & {
  testPathPattern: TestPathPredicate;
};

export type FilterResult = {
  test: string;
  message: string;
};

export type Filter = (testPaths: string[]) => Promise<{
  filtered: FilterResult[];
}>;
