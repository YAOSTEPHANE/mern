'use strict';

import chalk from 'chalk';
import jestWatcher from 'jest-watcher';
import { StandardInput } from 'readline';

exports.default = handleDeprecationWarnings;

async function handleDeprecationWarnings(
  pipe: NodeJS.WriteStream,
  stdin: StandardInput = process.stdin
): Promise<void> {
  if (typeof stdin.setRawMode !== 'function') {
    throw new Error('stdin.setRawMode is not a function');
  }

  const messages = [
    chalk.red('There are deprecation warnings.\n'),
    chalk.dim(' ❯ Press ' + 'Enter' + ' to continue.'),
    chalk.dim(' ❯ Press ' + 'Esc' + ' to exit.'),
  ];
  pipe.write(messages.join('\n'));
  stdin.setRawMode(true);
  stdin.resume();
  stdin.setEncoding('utf8');

  try {
    for await (const key of stdin) {
      if (key === '\r' || key === '\n') {
        break;
      } else if ([jestWatcher.KEYS.ESCAPE, jestWatcher.KEYS.CONTROL_C].indexOf(key) !== -1) {
        process.exit(0);
      }
    }
  } catch (err) {
    process.exit(0);
  }
}
