{"ast":null,"code":"import { userConstants, cartConstants } from './constants';\nimport axios from '../helpers/axios';\nexport const getAddress = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`/user/getaddress`);\n      dispatch({\n        type: userConstants.GET_USER_ADDRESS_REQUEST\n      });\n      if (res.status === 200) {\n        const {\n          userAddress: {\n            address\n          }\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ADDRESS_SUCCESS,\n          payload: {\n            address\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ADDRESS_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addAddress = payload => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`/user/address/create`, {\n        payload\n      });\n      dispatch({\n        type: userConstants.ADD_USER_ADDRESS_REQUEST\n      });\n      if (res.status === 201) {\n        console.log(res);\n        const {\n          address: {\n            address\n          }\n        } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ADDRESS_SUCCESS,\n          payload: {\n            address\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ADDRESS_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addOrder = payload => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`/addOrder`, payload);\n      dispatch({\n        type: userConstants.ADD_USER_ORDER_REQUEST\n      });\n      if (res.status === 201) {\n        console.log(res);\n        //const { order } = res.data;\n        dispatch({\n          type: cartConstants.RESET_CART\n        });\n        //dispatch({\n        //type: userConstants.ADD_USER_ORDER_SUCCESS,\n        //payload: { order },\n        //});\n        // const {\n        //   address: { address },\n        // } = res.data;\n        // dispatch({\n        //   type: userConstants.ADD_USER_ADDRESS_SUCCESS,\n        //   payload: { address },\n        // });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ORDER_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getOrders = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`/getOrders`);\n      dispatch({\n        type: userConstants.GET_USER_ORDER_REQUEST\n      });\n      if (res.status === 200) {\n        console.log(res);\n        const {\n          orders\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_SUCCESS,\n          payload: {\n            orders\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n// single order with complete info and delivery location\nexport const getOrder = payload => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`/getOrder`, payload);\n      dispatch({\n        type: userConstants.GET_USER_ORDER_DETAILS_REQUEST\n      });\n      if (res.status === 200) {\n        console.log(res);\n        const {\n          order\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_DETAILS_SUCCESS,\n          payload: {\n            order\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_DETAILS_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"names":["userConstants","cartConstants","axios","getAddress","dispatch","res","post","type","GET_USER_ADDRESS_REQUEST","status","userAddress","address","data","GET_USER_ADDRESS_SUCCESS","payload","error","GET_USER_ADDRESS_FAILURE","console","log","addAddress","ADD_USER_ADDRESS_REQUEST","ADD_USER_ADDRESS_SUCCESS","ADD_USER_ADDRESS_FAILURE","addOrder","ADD_USER_ORDER_REQUEST","RESET_CART","ADD_USER_ORDER_FAILURE","getOrders","get","GET_USER_ORDER_REQUEST","orders","GET_USER_ORDER_SUCCESS","GET_USER_ORDER_FAILURE","getOrder","GET_USER_ORDER_DETAILS_REQUEST","order","GET_USER_ORDER_DETAILS_SUCCESS","GET_USER_ORDER_DETAILS_FAILURE"],"sources":["C:/Users/kouas/Desktop/mern-batirem/batirem-frontend/src/actions/user.action.js"],"sourcesContent":["import {userConstants, cartConstants} from './constants';\r\nimport axios from '../helpers/axios';\r\n\r\nexport const getAddress = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.post(`/user/getaddress`);\r\n            dispatch({\r\n                type: userConstants.GET_USER_ADDRESS_REQUEST,\r\n            });\r\n            if (res.status === 200) {\r\n                const {\r\n                    userAddress: {address},\r\n                } = res.data;\r\n                dispatch({\r\n                    type: userConstants.GET_USER_ADDRESS_SUCCESS,\r\n                    payload: {address},\r\n                });\r\n                }else{\r\n                    const {error} = res.data;\r\n                    dispatch({\r\n                        type: userConstants.GET_USER_ADDRESS_FAILURE,\r\n                        payload: {error}\r\n                    });\r\n                }\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const addAddress = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(`/user/address/create`, { payload });\r\n      dispatch({ type: userConstants.ADD_USER_ADDRESS_REQUEST });\r\n      if (res.status === 201) {\r\n        console.log(res);\r\n        const {\r\n          address: { address },\r\n        } = res.data;\r\n        dispatch({\r\n          type: userConstants.ADD_USER_ADDRESS_SUCCESS,\r\n          payload: { address },\r\n        });\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: userConstants.ADD_USER_ADDRESS_FAILURE,\r\n          payload: { error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const addOrder = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(`/addOrder`, payload);\r\n      dispatch({ type: userConstants.ADD_USER_ORDER_REQUEST });\r\n      if (res.status === 201) {\r\n        console.log(res);\r\n        //const { order } = res.data;\r\n        dispatch({\r\n          type: cartConstants.RESET_CART,\r\n        });\r\n        //dispatch({\r\n          //type: userConstants.ADD_USER_ORDER_SUCCESS,\r\n          //payload: { order },\r\n        //});\r\n        // const {\r\n        //   address: { address },\r\n        // } = res.data;\r\n        // dispatch({\r\n        //   type: userConstants.ADD_USER_ADDRESS_SUCCESS,\r\n        //   payload: { address },\r\n        // });\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: userConstants.ADD_USER_ORDER_FAILURE,\r\n          payload: { error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getOrders = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(`/getOrders`);\r\n      dispatch({ type: userConstants.GET_USER_ORDER_REQUEST });\r\n      if (res.status === 200) {\r\n        console.log(res);\r\n        const { orders } = res.data;\r\n        dispatch({\r\n          type: userConstants.GET_USER_ORDER_SUCCESS,\r\n          payload: { orders },\r\n        });\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: userConstants.GET_USER_ORDER_FAILURE,\r\n          payload: { error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n// single order with complete info and delivery location\r\nexport const getOrder = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(`/getOrder`, payload);\r\n      dispatch({ type: userConstants.GET_USER_ORDER_DETAILS_REQUEST });\r\n      if (res.status === 200) {\r\n        console.log(res);\r\n        const { order } = res.data;\r\n        dispatch({\r\n          type: userConstants.GET_USER_ORDER_DETAILS_SUCCESS,\r\n          payload: { order },\r\n        });\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: userConstants.GET_USER_ORDER_DETAILS_FAILURE,\r\n          payload: { error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}