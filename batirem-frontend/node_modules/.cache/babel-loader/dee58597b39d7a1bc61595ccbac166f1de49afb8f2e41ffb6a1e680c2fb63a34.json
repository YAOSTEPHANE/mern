{"ast":null,"code":"import { authConstants, cartConstants } from './constants';\nimport axios from '../helpers/axios';\n\n//new update signup action\nexport const signup = user => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: authConstants.SIGNUP_REQUEST\n      });\n      const res = await axios.post(`/signup`, user);\n      if (res.status === 201) {\n        dispatch({\n          type: authConstants.SIGNUP_SUCCESS\n        });\n        const {\n          token,\n          user\n        } = res.data;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        dispatch({\n          type: authConstants.LOGIN_SUCCESS,\n          payload: {\n            token,\n            user\n          }\n        });\n      } else {\n        dispatch({\n          type: authConstants.SIGNUP_FAILURE\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const login = user => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post(`/signin`, {\n      ...user\n    });\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const user = JSON.parse(localStorage.getItem('user'));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          error: 'echec de la connection'\n        }\n      });\n    }\n  };\n};\nexport const signout = () => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGOUT_REQUEST\n    });\n    //localStorage.removeItem('user');\n    //localStorage.removeItem('token');\n    localStorage.clear();\n    dispatch({\n      type: authConstants.LOGOUT_SUCCESS\n    });\n    dispatch({\n      type: cartConstants.RESET_CART\n    });\n    //const res = await axios.post(`/admin/signout`);\n    //if(res.status === 200){\n\n    //} else {\n    //   dispatch({\n    //       type: authConstants.LOGOUT_FAILURE,\n    //       payload: { error: res.data.error }\n    //    });\n\n    //}\n  };\n};","map":{"version":3,"names":["authConstants","cartConstants","axios","signup","user","dispatch","type","SIGNUP_REQUEST","res","post","status","SIGNUP_SUCCESS","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","SIGNUP_FAILURE","error","console","log","login","LOGIN_REQUEST","LOGIN_FAILURE","isUserLoggedIn","getItem","parse","signout","LOGOUT_REQUEST","clear","LOGOUT_SUCCESS","RESET_CART"],"sources":["C:/Users/kouas/Desktop/mern-batirem/batirem-frontend/src/actions/auth.action.js"],"sourcesContent":["import { authConstants, cartConstants } from './constants';\r\nimport axios from '../helpers/axios';\r\n\r\n\r\n\r\n//new update signup action\r\nexport const signup = (user) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: authConstants.SIGNUP_REQUEST });\r\n           const res = await axios.post(`/signup`, user);\r\n            if (res.status === 201) {\r\n                dispatch({ type: authConstants.SIGNUP_SUCCESS });\r\n                const { token, user } = res.data;\r\n                localStorage.setItem(\"token\", token);\r\n                localStorage.setItem(\"user\", JSON.stringify(user));\r\n                dispatch({\r\n                    type: authConstants.LOGIN_SUCCESS,\r\n                    payload: {\r\n                        token,\r\n                        user,\r\n                    },\r\n                });\r\n            } else {\r\n                dispatch({ type: authConstants.SIGNUP_FAILURE});\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const login = (user) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: authConstants.LOGIN_REQUEST });\r\n        const res = await axios.post(`/signin`, {\r\n            ...user,\r\n        });\r\n\r\n        if (res.status === 200) {\r\n            const { token, user } = res.data;\r\n            localStorage.setItem(\"token\", token);\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token,\r\n                    user,\r\n                },\r\n            });\r\n        } else {\r\n            if (res.status === 400) {\r\n                dispatch({\r\n                    type: authConstants.LOGIN_FAILURE,\r\n                    payload: { error: res.data.error },\r\n                });\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport const isUserLoggedIn = () => {\r\n    return async dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: authConstants.LOGIN_FAILURE,\r\n                payload: { error: 'echec de la connection' }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const signout = () => {\r\n    return async dispatch => {\r\n        dispatch({ type: authConstants.LOGOUT_REQUEST });\r\n        //localStorage.removeItem('user');\r\n        //localStorage.removeItem('token');\r\n        localStorage.clear();\r\n        dispatch({ type: authConstants.LOGOUT_SUCCESS });\r\n        dispatch({ type: cartConstants.RESET_CART });\r\n        //const res = await axios.post(`/admin/signout`);\r\n        //if(res.status === 200){\r\n\r\n        //} else {\r\n        //   dispatch({\r\n        //       type: authConstants.LOGOUT_FAILURE,\r\n        //       payload: { error: res.data.error }\r\n        //    });\r\n\r\n        //}\r\n    }\r\n}            "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}