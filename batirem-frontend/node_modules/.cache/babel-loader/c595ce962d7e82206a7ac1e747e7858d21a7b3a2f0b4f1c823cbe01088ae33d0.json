{"ast":null,"code":"import { authConstants, cartConstants } from './constants';\nimport axios from '../helpers/axios';\nexport const signup = user => {\n  return async dispatch => {\n    let res;\n    try {\n      dispatch({\n        type: authConstants.SIGNUP_REQUEST\n      });\n      res = await axios.post(`/signup`, user);\n      if (res.status === 201) {\n        dispatch({\n          type: authConstants.SIGNUP_SUCCESS\n        });\n        const {\n          token,\n          user\n        } = res.data;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        dispatch({\n          type: authConstants.LOGIN_SUCCESS,\n          payload: {\n            token,\n            user\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: authConstants.SIGNUP_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      const {\n        data\n      } = error.response;\n      dispatch({\n        type: authConstants.SIGNUP_FAILURE,\n        payload: {\n          error: data.error\n        }\n      });\n    }\n  };\n};\nexport const login = user => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post(`/signin`, {\n      ...user\n    });\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const user = JSON.parse(localStorage.getItem('user'));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          error: 'echec de la connection'\n        }\n      });\n    }\n  };\n};\nexport const signout = () => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGOUT_REQUEST\n    });\n    //localStorage.removeItem('user');\n    //localStorage.removeItem('token');\n    localStorage.clear();\n    dispatch({\n      type: authConstants.LOGOUT_SUCCESS\n    });\n    dispatch({\n      type: cartConstants.RESET_CART\n    });\n    //const res = await axios.post(`/admin/signout`);\n    //if(res.status === 200){\n\n    //} else {\n    //   dispatch({\n    //       type: authConstants.LOGOUT_FAILURE,\n    //       payload: { error: res.data.error }\n    //    });\n\n    //}\n  };\n};","map":{"version":3,"names":["authConstants","cartConstants","axios","signup","user","dispatch","res","type","SIGNUP_REQUEST","post","status","SIGNUP_SUCCESS","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","error","SIGNUP_FAILURE","response","login","LOGIN_REQUEST","LOGIN_FAILURE","isUserLoggedIn","getItem","parse","signout","LOGOUT_REQUEST","clear","LOGOUT_SUCCESS","RESET_CART"],"sources":["C:/Users/kouas/Desktop/mern-batirem/batirem-frontend/src/actions/auth.action.js"],"sourcesContent":["import { authConstants, cartConstants } from './constants';\r\nimport axios from '../helpers/axios';\r\n\r\n\r\n\r\n\r\nexport const signup = (user) => {\r\n    return async (dispatch) => {\r\n      let res;\r\n      try {\r\n        dispatch({ type: authConstants.SIGNUP_REQUEST });\r\n        res = await axios.post(`/signup`, user);\r\n        if (res.status === 201) {\r\n          dispatch({ type: authConstants.SIGNUP_SUCCESS });\r\n          const { token, user } = res.data;\r\n          localStorage.setItem(\"token\", token);\r\n          localStorage.setItem(\"user\", JSON.stringify(user));\r\n          dispatch({\r\n            type: authConstants.LOGIN_SUCCESS,\r\n            payload: {\r\n              token,\r\n              user,\r\n            },\r\n          });\r\n        } else {\r\n          const { error } = res.data;\r\n          dispatch({ type: authConstants.SIGNUP_FAILURE, payload: { error } });\r\n        }\r\n      } catch (error) {\r\n        const { data } = error.response;\r\n        dispatch({\r\n          type: authConstants.SIGNUP_FAILURE,\r\n          payload: { error: data.error },\r\n        });\r\n      }\r\n    };\r\n  };\r\n\r\n  export const login = (user) => {\r\n    return async (dispatch) => {\r\n      dispatch({ type: authConstants.LOGIN_REQUEST });\r\n      const res = await axios.post(`/signin`, {\r\n        ...user,\r\n      });\r\n  \r\n      if (res.status === 200) {\r\n        const { token, user } = res.data;\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        dispatch({\r\n          type: authConstants.LOGIN_SUCCESS,\r\n          payload: {\r\n            token,\r\n            user,\r\n          },\r\n        });\r\n      } else {\r\n        if (res.status === 400) {\r\n          dispatch({\r\n            type: authConstants.LOGIN_FAILURE,\r\n            payload: { error: res.data.error },\r\n          });\r\n        }\r\n      }\r\n    };\r\n  };\r\n\r\nexport const isUserLoggedIn = () => {\r\n    return async dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: authConstants.LOGIN_FAILURE,\r\n                payload: { error: 'echec de la connection' }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const signout = () => {\r\n    return async dispatch => {\r\n        dispatch({ type: authConstants.LOGOUT_REQUEST });\r\n            //localStorage.removeItem('user');\r\n            //localStorage.removeItem('token');\r\n            localStorage.clear();\r\n            dispatch({ type: authConstants.LOGOUT_SUCCESS });\r\n            dispatch({type: cartConstants.RESET_CART});\r\n            //const res = await axios.post(`/admin/signout`);\r\n            //if(res.status === 200){\r\n\r\n            //} else {\r\n             //   dispatch({\r\n             //       type: authConstants.LOGOUT_FAILURE,\r\n             //       payload: { error: res.data.error }\r\n            //    });\r\n    \r\n            //}\r\n    }\r\n}            "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}