{"ast":null,"code":"import { cartConstants } from './constants';\nimport store from '../store';\nimport axios from '../helpers/axios';\nconst getCartItems = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: cartConstants.ADD_TO_CART_REQUEST\n      });\n      const res = await axios.post(`/user/getCartItems`);\n      if (res.status === 200) {\n        const {\n          cartItems\n        } = res.data;\n        console.log({\n          getCartItems: cartItems\n        });\n        if (cartItems) {\n          dispatch({\n            type: cartConstants.ADD_TO_CART_SUCCESS,\n            payload: {\n              cartItems\n            }\n          });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addToCart = (product, newQty = 1) => {\n  return async dispatch => {\n    const {\n      cart: {\n        cartItems\n      },\n      auth\n    } = store.getState();\n    //console.log('action::products', products);\n    // const product = action.payload.product;\n    // const products = actions.payload.products;\n    const qty = cartItems[product._id] ? parseInt(cartItems[product._id].qty + newQty) : 1;\n    cartItems[product._id] = {\n      ...product,\n      qty\n    };\n    if (auth.authenticate) {\n      dispatch({\n        type: cartConstants.ADD_TO_CART_REQUEST\n      });\n      const payload = {\n        cartItems: [{\n          product: product._id,\n          quantity: qty\n        }]\n      };\n      console.log(payload);\n      const res = await axios.post(`/user/cart/addtocart`, payload);\n      console.log(res);\n      if (res.status === 201) {\n        dispatch(getCartItems());\n      }\n    } else {\n      localStorage.setItem;\n    }\n  };\n};\nexport const updateCart = () => {\n  return async dispatch => {\n    const cartItems = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : null;\n    if (cartItems) {\n      dispatch({\n        type: cartConstants.ADD_TO_CART,\n        payload: {\n          cartItems\n        }\n      });\n    }\n  };\n};","map":{"version":3,"names":["cartConstants","store","axios","getCartItems","dispatch","type","ADD_TO_CART_REQUEST","res","post","status","cartItems","data","console","log","ADD_TO_CART_SUCCESS","payload","error","addToCart","product","newQty","cart","auth","getState","qty","_id","parseInt","authenticate","quantity","localStorage","setItem","updateCart","getItem","JSON","parse","ADD_TO_CART"],"sources":["C:/Users/kouas/Desktop/mern-batirem/batirem-frontend/src/actions/cart.action.js"],"sourcesContent":["import { cartConstants } from './constants';\r\nimport store from '../store';\r\nimport axios from '../helpers/axios';\r\n\r\n\r\n\r\n\r\nconst getCartItems = () => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: cartConstants.ADD_TO_CART_REQUEST });\r\n            const res = await axios.post(`/user/getCartItems`);\r\n            if (res.status === 200) {\r\n                const { cartItems } = res.data;\r\n                console.log({ getCartItems: cartItems })\r\n                if (cartItems) {\r\n                    dispatch({\r\n                        type: cartConstants.ADD_TO_CART_SUCCESS,\r\n                        payload: { cartItems }\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const addToCart = (product, newQty = 1) => {\r\n    return async dispatch => {\r\n        const { cart: {\r\n            cartItems\r\n        },\r\n            auth } = store.getState();\r\n        //console.log('action::products', products);\r\n        // const product = action.payload.product;\r\n        // const products = actions.payload.products;\r\n        const qty = cartItems[product._id] ? parseInt(cartItems[product._id].qty + newQty) : 1;\r\n        cartItems[product._id] = {\r\n            ...product,\r\n            qty\r\n        };\r\n        if (auth.authenticate) {\r\n            dispatch({ type: cartConstants.ADD_TO_CART_REQUEST });\r\n            const payload = {\r\n                cartItems: [{\r\n                    product: product._id,\r\n                    quantity: qty\r\n                }]\r\n            };\r\n            console.log(payload);\r\n            const res = await axios.post(`/user/cart/addtocart`, payload);\r\n            console.log(res);\r\n            if(res.status === 201) {\r\n                dispatch(getCartItems());\r\n            }\r\n        }else{\r\n            localStorage.setItem\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateCart = () => {\r\n    return async dispatch => {\r\n        const cartItems = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : null;\r\n\r\n        if (cartItems) {\r\n            dispatch({\r\n                type: cartConstants.ADD_TO_CART,\r\n                payload: { cartItems }\r\n            });\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,SAASA,aAAa,QAAQ,aAAa;AAC3C,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,KAAK,MAAM,kBAAkB;AAKpC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,OAAO,MAAMC,QAAQ,IAAI;IACrB,IAAI;MACAA,QAAQ,CAAC;QAAEC,IAAI,EAAEL,aAAa,CAACM;MAAoB,CAAC,CAAC;MACrD,MAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,IAAI,CAAE,oBAAmB,CAAC;MAClD,IAAID,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;QACpB,MAAM;UAAEC;QAAU,CAAC,GAAGH,GAAG,CAACI,IAAI;QAC9BC,OAAO,CAACC,GAAG,CAAC;UAAEV,YAAY,EAAEO;QAAU,CAAC,CAAC;QACxC,IAAIA,SAAS,EAAE;UACXN,QAAQ,CAAC;YACLC,IAAI,EAAEL,aAAa,CAACc,mBAAmB;YACvCC,OAAO,EAAE;cAAEL;YAAU;UACzB,CAAC,CAAC;QACN;MACJ;IACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACtB;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGA,CAACC,OAAO,EAAEC,MAAM,GAAG,CAAC,KAAK;EAC9C,OAAO,MAAMf,QAAQ,IAAI;IACrB,MAAM;MAAEgB,IAAI,EAAE;QACVV;MACJ,CAAC;MACGW;IAAK,CAAC,GAAGpB,KAAK,CAACqB,QAAQ,CAAC,CAAC;IAC7B;IACA;IACA;IACA,MAAMC,GAAG,GAAGb,SAAS,CAACQ,OAAO,CAACM,GAAG,CAAC,GAAGC,QAAQ,CAACf,SAAS,CAACQ,OAAO,CAACM,GAAG,CAAC,CAACD,GAAG,GAAGJ,MAAM,CAAC,GAAG,CAAC;IACtFT,SAAS,CAACQ,OAAO,CAACM,GAAG,CAAC,GAAG;MACrB,GAAGN,OAAO;MACVK;IACJ,CAAC;IACD,IAAIF,IAAI,CAACK,YAAY,EAAE;MACnBtB,QAAQ,CAAC;QAAEC,IAAI,EAAEL,aAAa,CAACM;MAAoB,CAAC,CAAC;MACrD,MAAMS,OAAO,GAAG;QACZL,SAAS,EAAE,CAAC;UACRQ,OAAO,EAAEA,OAAO,CAACM,GAAG;UACpBG,QAAQ,EAAEJ;QACd,CAAC;MACL,CAAC;MACDX,OAAO,CAACC,GAAG,CAACE,OAAO,CAAC;MACpB,MAAMR,GAAG,GAAG,MAAML,KAAK,CAACM,IAAI,CAAE,sBAAqB,EAAEO,OAAO,CAAC;MAC7DH,OAAO,CAACC,GAAG,CAACN,GAAG,CAAC;MAChB,IAAGA,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;QACnBL,QAAQ,CAACD,YAAY,CAAC,CAAC,CAAC;MAC5B;IACJ,CAAC,MAAI;MACDyB,YAAY,CAACC,OAAO;IACxB;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC5B,OAAO,MAAM1B,QAAQ,IAAI;IACrB,MAAMM,SAAS,GAAGkB,YAAY,CAACG,OAAO,CAAC,MAAM,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACG,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI;IAEhG,IAAIrB,SAAS,EAAE;MACXN,QAAQ,CAAC;QACLC,IAAI,EAAEL,aAAa,CAACkC,WAAW;QAC/BnB,OAAO,EAAE;UAAEL;QAAU;MACzB,CAAC,CAAC;IACN;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}